version: "3.9"

networks:
  test:
    driver: "bridge"

services:
  php:
    container_name: wordpress
    build:
      context: .
      dockerfile: ./docker-files/php/Dockerfile
    volumes:
      - ./wordpress:/var/www/wordpress:delegated
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_NAME: ${DB_DATABASE}
      WORDPRESS_DB_USER: ${DB_USERNAME}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}

    depends_on:
      - mysql
    working_dir: /var/www/wordpress
    entrypoint: /usr/local/bin/entrypoint.sh

    networks:
      - test

  #webserver
  nginx:
    container_name: test_webserver
    image: nginx:latest
    volumes:
      - ./docker-files/nginx/certs:/etc/nginx/certs/self-signed
      - ./wordpress:/var/www/wordpress:delegated
      - ./docker-files//nginx/app.conf:/etc/nginx/conf.d/app.conf
    ports:
      - "7009:80"
      - "7010:443"
    depends_on:
      - php
      - mysql

    networks:
      - test

  #database
  mysql:
    container_name: test_db
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    restart: always
    tty: true
    ports:
      - "7007:3306"

    volumes:
      - ./storage/dbdata:/var/lib/mysql
    networks:
      - test

  # setup db management interface
  adminer:
    container_name: test_adminer
    image: adminer:latest
    restart: always
    ports:
      - "7011:8080"
    environment:
      ADMINER_DEFAULT_SERVER: ${DB_HOST}
    networks:
      - test
